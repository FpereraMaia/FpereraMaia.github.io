<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Felipe Quadros (Blog do Perera)</title>
    <description>Um Desenvolvedor com o intuito de aprender e repassar o conteúdo aprendido estudando desenvolvimento web. :)
</description>
    <link>http://felipequadros.com/</link>
    <atom:link href="http://felipequadros.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 05 Oct 2016 11:08:33 -0300</pubDate>
    <lastBuildDate>Wed, 05 Oct 2016 11:08:33 -0300</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Tipagem Fraca, Forte, Estática, Dinâmica e Inferência de Tipo</title>
        <description>&lt;p&gt;Nas últimas semanas tenho descoberto que existe um débito técnico muito grande em relação a programação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Débito técnico: leia-se uma forma bonita que aprendi a falar para mostrar que tenho uma grande capacidade de programar sem saber de fato a aplicação, teoria, filosofia daquilo que está sendo escrito.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tipagem fraca, forte, dinâmica, estática e inferência de tipos são 5 conceitos diferentes&lt;/strong&gt; - só pra ficar bem claro.&lt;/p&gt;

&lt;h1 id=&quot;inferncia-de-tipo&quot;&gt;Inferência de Tipo&lt;/h1&gt;

&lt;p&gt;A inferência de tipos é a capacidade do compilador entender/’adivinhar’ qual é o tipo de dados de determinada variável sem ela ter sido declarada no código escrito. Isso, mastigue o conceito com calma tomando a sua cerveja.&lt;/p&gt;

&lt;p&gt;Vamos aos exemplos. No C# temos inferência de tipo ao declarar variáveis locais com o “var” antes do nome da nossa variável, tipo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inferencia&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Nossa&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vari&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vel&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inferencia&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ter&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seu&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setado&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;de&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compila&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;çã&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A lá, que beleza. Não declaramos tipo nenhum, mas na hora que o compilador enxerga o valor ele entende que é uma variável do tipo int, e é essa capacidade que define que uma linguagem &lt;strong&gt;infere tipos&lt;/strong&gt;. Temos PHP, Python , Javascript, etc. Um exemplo contrário seria o Java, nela o tipo deve ser determinado na declaração da variável (Pelo que pesquisei está tendo um esforço gradual em colocar a inferência de tipo no java há algum tempo ver &lt;a href=&quot;http://openjdk.java.net/jeps/286&quot;&gt;JEP 286: Local-Variable Type Inferecen&lt;/a&gt; ).&lt;/p&gt;

&lt;h1 id=&quot;tipagem-forte-e-fraca&quot;&gt;Tipagem Forte e Fraca&lt;/h1&gt;

&lt;p&gt;Uma forma simples de definir a tipagem forte e fraca é que, caso ela seja forte, teremos a verificação de tipos em todas as operações em tempo de execução ou compilação, já a fraca não temos essa verificação.&lt;/p&gt;

&lt;p&gt;Por exemplo, temos nosso amigo Javascript que é uma tipagem fraca, ou seja, além de não ter a capacidade de detectar erros em operações de tipos diferentes, ela nos dá um resultado nas operações de tipos diferentes, mas como assim?&lt;/p&gt;

&lt;p&gt;Em Javascript podemos fazer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// o resultado será &#39;11&#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// o resultado será 1true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Abra seu navegador e teste amiguinho. O PHP é uma outra linguagem de tipagem fraca.&lt;/p&gt;

&lt;p&gt;Um Exemplo de tipagem forte seria o Python. Fazendo as mesmas operações do Javascript no python temos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatenate&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;str&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;int&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatenate&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;str&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;bool&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Note que PHP tem tipagem fraca e o Python tem tipagem forte mas as duas linguagens tem Inferência de Tipos.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;tipagem-esttica-e-dinmica&quot;&gt;Tipagem Estática e Dinâmica&lt;/h1&gt;

&lt;p&gt;Tipagem Estática é a capacidade de uma linguagem ajudar na segurança de tipos, onde, a partir do momento que uma linguagem determina o tipo de uma variável esse tipo não pode ser alterado durante a compilação, fazendo com que o jovem programador não se preocupe tanto pois o compilador acusará erro caso seja alterado o tipo de uma variável.&lt;/p&gt;

&lt;p&gt;Por exemplo, em C#:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Note que terá a inferência do tipo inteiro
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erro&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;de&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compila&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;çã&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pois&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;da&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vari&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vel&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;é&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inteiro&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Já na Tipagem Dinâmica temos a possibilidade de alterar o tipo da nossa variável em tempo de execução. A essa capacidade definimos uma linguagem como Dinâmica, como por exemplo, o nosso velho amigo Javascript, veja:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Note que terá a inferência do tipo inteiro&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//A partir desse momento sua variável é do tipo string com o valor &#39;A&#39;. Lance normal, segue o jogo.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Note que o C# tem inferência de tipo, é forte e é estática, já o javascript tem inferência de tipo, é fraca e é dinâmica.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Veja que uma linguagem com tipagem dinâmica, não implica em uma linguagem dinâmica, e em relação a isso já deixo o &lt;a href=&quot;http://www.akitaonrails.com/2008/02/22/tradu-o-tipagem-din-mica-vs-linguagem-din-mica-explicado&quot;&gt;post do akita&lt;/a&gt; que é uma tradução do post de Steven Devijver que analisa um terceiro post! :)&lt;/p&gt;

&lt;p&gt;Um outro objetivo do blog é repassar conceito que deveriam ser básicos, mas pelo menos na minha cidade, a maioria das pessaos que conversam já vão direto pra um framework e passam batidos nesse tipo de diferença, o que acaba influenciando na qualidade dos profissionais, acredito eu.&lt;/p&gt;

&lt;p&gt;Eae, vocês sabiam essas diferenças? Eu duvido!&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jun 2016 15:00:00 -0300</pubDate>
        <link>http://felipequadros.com/programa%C3%A7%C3%A3o/b%C3%A1sico/iniciante/geral/teoria/2016/06/05/tipagem-fraca-forte-est%C3%A1tica-din%C3%A2mica-e-inferencia-de-tipo/</link>
        <guid isPermaLink="true">http://felipequadros.com/programa%C3%A7%C3%A3o/b%C3%A1sico/iniciante/geral/teoria/2016/06/05/tipagem-fraca-forte-est%C3%A1tica-din%C3%A2mica-e-inferencia-de-tipo/</guid>
        
        
        <category>programação</category>
        
        <category>básico</category>
        
        <category>iniciante</category>
        
        <category>geral</category>
        
        <category>teoria</category>
        
      </item>
    
      <item>
        <title>Startup Weekend - Um Novo Compromisso SWUDI</title>
        <description>&lt;h1 id=&quot;vocs-j-ouviram-falar-da-iniciativa-startup-weekend-texto-detected&quot;&gt;Vocês já ouviram falar da iniciativa Startup Weekend? #TEXTÃO DETECTED&lt;/h1&gt;
&lt;p&gt;Imagino que você seja um homem de negócios, um desenvolvedor ou um designer que tem mais ou menos 952,459 ideias de novas soluções por hora. Levando isso em consideração, surge logo de cara uma pergunta - Como que irei fazer com que a minha ideia solucione problemas?&lt;/p&gt;

&lt;p&gt;Se você já está pensando em construir uma app que vale mais que barras de ouro, vai resolver o problema da zika/chikungunya e ainda vai ser divertido conseguindo um faturamento de 1 Bilhão anual, te aconselho a continuar lendo esse artigo e participar de um Startup Weekend.&lt;/p&gt;

&lt;p&gt;Como diz no &lt;a href=&quot;https://startupweekend.org/&quot;&gt;site oficial&lt;/a&gt;, “em 54 horas, você vai experimentar os altos, baixos, as diversões e a pressão que compõe a vida em uma Startup”. De forma resumida, o Startup Weekend é um evento com o intuito de &lt;strong&gt;PROVER EDUCAÇÃO&lt;/strong&gt; para que os participantes possam iniciar uma empresa real com &lt;strong&gt;soluções reais&lt;/strong&gt; para &lt;strong&gt;problemas reais&lt;/strong&gt;. “Desgeneralizando” um pouco o que escrevi, o evento imerge o participante em práticas e teorias com o intuito de ensinar as melhores práticas para retirar as ideias de startups da galera do papel em apenas 54 horas.&lt;/p&gt;

&lt;p&gt;Beleza Perera, o evento vai me dar a educação necessária, para prover soluções reais para problemas reais. E…..? E aí que vou te contar minha experiência na participação do Startup Weekend Uberlândia - #SWUDI realizado de 20 a 22 de Maio/2016, para que você entenda o formato e o motivo de ser tão FANTÁSTICO!!&lt;/p&gt;

&lt;h1 id=&quot;experincia-no-startup-weekend-uberlndia&quot;&gt;Experiência no Startup Weekend Uberlândia&lt;/h1&gt;
&lt;p&gt;obs.: &lt;strong&gt;As informações são baseadas na minha experiência, para saber tudo sobre as funções dos facilitadores, organizadores, mentores, etc leia o &lt;a href=&quot;https://startupweekend.org/&quot;&gt;site oficial&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;day-one-palestra-pitch-da-ideia-e-criao-dos-times&quot;&gt;Day One: Palestra, Pitch da ideia e Criação dos Times&lt;/h3&gt;

&lt;p&gt;Chegamos em Uberlândia (Cidade muito bacana por sinal) para o Startup Weekend às 18:00. O evento começa com um rapaz com uma energia fora do comum chamado &lt;a href=&quot;https://www.facebook.com/rmoraes2011&quot;&gt;Ricardo Moraes&lt;/a&gt; que é o &lt;a href=&quot;https://startupweekend.org/organizers/facilitators/become-a-facilitator#what-is-a-facilitator&quot;&gt;&lt;strong&gt;FACILITADOR&lt;/strong&gt;&lt;/a&gt; batendo um papo sobre o que vamos encontrar no Startup Weekend. Fui direto na fonte (Ricardo) buscar uma definição da função do Facilitador, e resumindo, é parecido ao Mestre de Cerimônias entretanto ele também guia os bastidores. O facilitador mantém os valores (CORE 7) do evento intactos com o foco em trazer uma experiência incrível para todos (participantes, mentores, organizadores, jurados, etc).&lt;/p&gt;

&lt;p&gt;Na primeira palestra tudo parece fácil. “Ah é só ter uma ideia, validar, vender e apresentar”. Pobre e ignorante jovem.&lt;/p&gt;

&lt;p&gt;Logo após a palestra todos os participantes do evento tem 30 segundos para ir a frente do público para expor a sua ideia com o intuito de formar uma equipe (1º Pitch). Tivemos 45 ideias apresentadas, e logo após, o público define através de uma votação simples as melhores ideias. Os organizadores são a galera mais #HardWorkPapai que existe no evento, e são eles que cuidam de som, luz, problemas, patrocinadores e que recolhem as ideias mais votadas. O &lt;a href=&quot;http://herberthamaral.com/&quot;&gt;Herberth Amaral&lt;/a&gt; do Minas UP foi a frente e deu a ideia de criar um sistema para pessoas com dificuldades em ter disciplina na prática esportiva, E TEVE A IDEIA ESCOLHIDA! APLAUSOS!!! #GoMinasUp&lt;/p&gt;

&lt;p&gt;Após selecionadas as ideias, as pessoas que deram as ideias começam a efetuar uma verdadeira caça para montar sua equipe de trabalho. Fiquei na equipe do Herberth para criar o FitMania, juntamente com uma galera incrível, que são: o Coach &lt;a href=&quot;https://www.facebook.com/Renan.Teixeira.07&quot;&gt;Renan Teixeira&lt;/a&gt;, o acadêmico Business &lt;a href=&quot;https://www.facebook.com/marlon.moroo&quot;&gt;Marlon Moro&lt;/a&gt; e o excelente Designer &lt;a href=&quot;https://www.facebook.com/jonnathanbarcelos&quot;&gt;Jonnathan Barcelos&lt;/a&gt; .&lt;/p&gt;

&lt;h3 id=&quot;day-two-aprendizado-e-hardworkpapai-via-murilo-gun&quot;&gt;Day Two: Aprendizado e HardWorkPapai (via Murilo Gun)&lt;/h3&gt;

&lt;p&gt;Começamos sendo pressionados pelos mentores. Os mentores são uma galera que você ama em dados momentos e quer matar em outros. Eles sentam na mesa pra te guiar e pra te “trucar”. Digo com propriedade que eles são os maiores responsáveis pelas pivotadas e nós somos os principais responsáveis pelo acerto ou erro desses pivôs. Nossa equipe pivotou 458 vezes até às 11 da manhã, a partir daí parei de contar.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tivemos uma palestra sobre validação e prototipação nesse dia para nos ajudar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Somos guiados por uma série de tarefas assim listadas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Definição do problema (Pessoas são indisciplinadas e não mantém uma periodicidade em exercícios físicos)&lt;/li&gt;
  &lt;li&gt;Validação do problema (Saímos nas ruas de Uberlândia e na internet descobrindo se as pessoas fazem exercício, com que periodicidade e o motivo delas faltarem ou delas persistirem na prática de exercícios físicos. Entrevistamos 180 pessoas).&lt;/li&gt;
  &lt;li&gt;Sugestão de Solução para o problema validado (Constatamos na pesquisa que as pessoas se desmotivam por preguiça em sua maioria, e que elas se motivam devido a saúde e acompanhamento de amigos nas práticas físicas. Sendo assim, nossa solução foi que uma pessoa desafie outra a perder peso. Caso ela cumpra o desafio, ela ganha dinheiro, caso ela perca ela perde dinheiro).&lt;/li&gt;
  &lt;li&gt;Validação da Solução (Criamos um protótipo para validar. Nosso protótipo foi ir a rua e fazer com que o desafio fosse feito e que as pessoas passassem o dinheiro via Moip. Conseguimos 4 participantes).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Claro galera, que 180 pessoas para validar o erro e 4 participantes utilizando é pouco pra falar que a solução funciona, entretanto, o papel do Startup Weekend é &lt;strong&gt;EDUCAR&lt;/strong&gt;, e ao realizar essas tarefas na prática e na pressão entendemos perfeitamente TODAS as ideias propostas.&lt;/p&gt;

&lt;h3 id=&quot;day-three-pr-pitch-pitch-e-escolha-dos-vencedores&quot;&gt;Day three: Pré Pitch, Pitch e Escolha dos vencedores&lt;/h3&gt;

&lt;p&gt;O nosso amigo Coach Renan Teixeira ficou encarregado do pitch, enquanto eu escrevia o produto e Herberth e Marlon iam pra rua vender o protótipo (SIM NOS ATRASAMOS MAS DEU TUDO CERTO). Nessa fase o Renan teve um pré pitch que é apresentar o pitch para os mentores para que eles nos “truquem” novamente. Nesse momento estávamos há 3 dias sem dormir direito, trabalhando intensamente e querendo matar qualquer mentor que nos fizesse pivotar, mesmo assim foi incrível.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tivemos uma palestra sobre pitch nesse dia para nos ajudar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ao fim do evento o pitch final foi para jurados que me deixaram impressionados com a capacidade de percepção de vários negócios, eles não davam uma dica furada! Enquanto saia o resultado, tivemos uma palestra com um Japonês de 30 anos que parecia ter 15 (pesquisando o nome, falha minha esqueci) falando sobre Design. O tema proposto da palestra foi excelente!&lt;/p&gt;

&lt;p&gt;E finalmente foram anunciados os vencedores. A ideia vencedora foi a PoupeCent$ onde nosso amigo Montesclarense do Minas UP &lt;a href=&quot;https://www.facebook.com/paulohenrique.martins.921&quot;&gt;Paulo Sidônio&lt;/a&gt; participou. Já dei os parabéns pessoalmente, mas gostaria de deixar frisado que a ideia é excelente e mereceram com louvor ganhar. Em resumo, a ideia consiste em transformar aquelas balinhas que a gente recebe como troco em dinheiro de fato, nunca mais haverão balinhas no lugar de moedas de um centavo.&lt;/p&gt;

&lt;p&gt;Sim, eu sei que por boa regra um artigo não deve ser longo demais e etc. Gostaria de agradecer quem conseguiu ler até o final e falar uma última coisa. O Startup Weekend é um evento de negócios e tecnologia. Ele divide os participantes em Desenvolvedor, Designer e homem de negócios, EU TENHO ABSOLUTA CERTEZA que você se encaixa em um dos três perfis, então, veja &lt;a href=&quot;https://startupweekend.org/events?utf8=%E2%9C%93&amp;amp;q=Brazil&amp;amp;button=&quot;&gt;essa lista&lt;/a&gt; dos próximos eventos E FAÇA SUA INSCRIÇÃO LOGO.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 May 2016 18:48:00 -0300</pubDate>
        <link>http://felipequadros.com/startup-weekend/startup/evento/swudi/2016/05/23/startup-weekend-um-novo-compromisso-swudi/</link>
        <guid isPermaLink="true">http://felipequadros.com/startup-weekend/startup/evento/swudi/2016/05/23/startup-weekend-um-novo-compromisso-swudi/</guid>
        
        
        <category>startup-weekend</category>
        
        <category>startup</category>
        
        <category>evento</category>
        
        <category>swudi</category>
        
      </item>
    
      <item>
        <title>O que são meta tags HTML e quais utilizarei nesse blog?</title>
        <description>&lt;p&gt;É isso mesmooo, temos nosso primeiro artigo, e será sobre meta tags!! Mas por quê? Por que eu to indo criar as meta tags desse blog agora, e após fuçar o &lt;a href=&quot;http://www.akitaonrails.com/&quot;&gt;blog do akita&lt;/a&gt; e o &lt;a href=&quot;http://www.maujor.com&quot;&gt;blog do dinossauro das CSS&lt;/a&gt; nota-se claramente que há meta tags pra caramba no mundo e eu não posso ficar aqui parado.&lt;/p&gt;

&lt;p&gt;Só um minuto que esqueci o latão de skol…. Pronto, simbora.&lt;/p&gt;

&lt;h2 id=&quot;beleza-fera-mas-o-que-so-meta-tags&quot;&gt;Beleza fera, mas o que são meta tags?&lt;/h2&gt;
&lt;p&gt;Segundo a wiki do &lt;a href=&quot;https://www.w3.org/wiki/HTML/Elements/meta&quot;&gt;W3C&lt;/a&gt; meta tags são:
“The &lt;meta /&gt; element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements.”
&lt;strong&gt;Em HuehueBR&lt;/strong&gt; - Segundo o W3C (2012), o elemento &lt;meta /&gt; representa uma variedade de metadados que não podem ser expressados usando os elementos title, base, link, style e script.&lt;/p&gt;

&lt;p&gt;Ou seja, várias informações sobre a sua página serão declaradas em tags &lt;meta /&gt;, &lt;strong&gt;o que implica dizer que ela trabalha com metadados&lt;/strong&gt; e onde suponho surgiu o nome dessa tag.
Sendo assim, utilizaremos as meta tags para “informar informações” relativas ao nosso site, para facilitar o trabalho de um tanto de gente, como - por exemplo - do &lt;a href=&quot;https://www.facebook.com/felipepereira.quadrosmaia&quot;&gt;facebook&lt;/a&gt;, que utiliza das informações colocadas por você (desenvolvedor) nas tag meta para apresentar uma publicação de uma página de forma linda e agradável - com imagens, descrições e o escambaul - na timeline.&lt;/p&gt;

&lt;p&gt;Normalmente - eu disse &lt;strong&gt;NORMALMENTE&lt;/strong&gt; - a tag &lt;meta /&gt; tem dois atributos, um atributo define o funcionamento da tag meta e o outro atributo o conteúdo dessa tag. Beleza, tô confuso, vamos mostrar. Quando eu digo definir, isso quer dizer que dependendo do atributo declarado saberemos qual é o tipo do metadado que está no abributo de conteúdo. Sendo assim temos os atributos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; que quando está sendo utilizado é um metadado a nível de documento, por ex:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Meta tag que traz a descrição da sua página
e comumente utilizada pelo google para dar uma prévia sobre
as páginas no resultado da busca&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Os SEO pira --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;http-equiv&lt;/strong&gt; quando declarado, é utilizado para simular um cabeçalho de resposta HTTP com o intuito de controlar as ações do browser. Ele não serve para sobrescrever a resposta HTTP do servidor. Um exemplo seria controlar o ato de cachear a página:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cache-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;no-cache&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;itemprop&lt;/strong&gt; vem de uma parada muito louca chamada &lt;a href=&quot;https://www.w3.org/TR/microdata/#content-models&quot;&gt;microdata&lt;/a&gt; do HTML5 que pode ser tema de uma próxima conversa. Quando setado em uma tag meta você pode omitir o atributo name, http-equiv e charset e é obrigatório ter o content. O google utiliza esses metas, por exemplo, no google plus “para apresentar uma publicação de uma página de forma linda e agradável - com imagens, descrições e o escambaul - na timeline”.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Perera&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Meu nome por que sou o autor dessa bagaça de artigo --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Passamos da fase da teoria para dar aquela analisada básica nas tags que irei utilizar nesse blog. Se você der uma olhada no código html da página verá-lhe-lho-as no código.&lt;/p&gt;

&lt;h2 id=&quot;quais-meta-tags-utilizarei-no-blog&quot;&gt;Quais meta tags utilizarei no blog?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Charset&lt;/strong&gt;
Imprescindível! Muito pequeno gafanhoto se ferra pois o seu arquivo não está sendo lido corretamente devido ao charset. Essa tag fala pro browser qual o charset é utilizado por você.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Meu nome por que sou o autor dessa bagaça de artigo --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Keywords&lt;/strong&gt;
A keywords é um clássico que foi mal utilizado durante bom tempo e agora o google a desconsidera. O pessoal descobriu que era só colocar as palavras que todo mundo tava procurando para que seu site sofresse uma alavancagem nos resultados da busca. Hoje em dia os buscadores levam em consideração a coerência semântica, ou seja, se as palavras chaves estiverem coerente com o conteúdo da sua página ela é melhor rankeada.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;keywords&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;html, meta tags, microdata, front-end, SEO,
HTML5, http, http-equiv, w3c&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Meu nome por que sou o autor dessa bagaça de artigo --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Viewport&lt;/strong&gt;
Como bem disse o Diego Eis do Tableless &lt;a href=&quot;http://tableless.com.br/manipulando-metatag-viewport/&quot;&gt;nesse artigo&lt;/a&gt;, viewport é a área da tela onde seu website aparece. As definições do viewport são providenciais para que possamos controlar a visualização em vários tamanhos de tela. Caso queira saber mais leia o artigo do Diego que é duca.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1,
user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;
Essa meta dá uma descrição resumida da sua página. Utilizo normalmente a primeira frase do artigo pois é isso que aparece na descrição de um resultado no google, consequentemente minha primeira frase deve ter claramente o assunto tratado.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;É isso mesmooo, temos nosso primeiro artigo,
e será sobre meta tags!! Mas por quê? Por que eu to indo criar as meta tags
desse blog agora, e após fuçar o blo..&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Autor&lt;/strong&gt;
Nesse caso temos uma verdadeira assinatura dos créditos de quem escreveu a página.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Perera&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Itemprop Author, name e description&lt;/strong&gt;
Coloquei essas metas juntas pois elas são exatamente a mesma coisa das metas com name description, author. E a de itemprop = name é relacionado a tag title. São informações duplicadas declaradas de forma diferente para abranger, por exemplo, o google plus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Perera&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;O que são meta tags HTML e quais utilizarei
nesse blog?&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;É isso mesmooo, temos nosso primeiro
artigo,e será sobre meta tags!! Mas por quê? Por que eu to indo criar as
meta tags desse blog agora,e após fuçar o blo..&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Meta tags do facebook&lt;/strong&gt;
E pra finalizar, como exemplo gigantesco, segue as meta tags do open graph do facebook. A partir dessas declarações, ele define como publicar e mapear a sua página no facebook.
Acabou a cerveja, então não vou explicar uma a uma, pesquisa ae seu vagabundo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fb:app_id&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;333451410072252&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:locale&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pt_BR&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;O que são meta tags HTML e quais utilizarei nesse blog?&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;É isso mesmooo, temos nosso primeiro
artigo,e será sobre meta tags!! Mas por quê? Por que eu to indo criar as
meta tags desse blog agora,e após fuçar o blo..&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:url&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://felipequadros.com/meta-tags/html/front-end/2016/05/15/meta-tags-do-blog/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:site_name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog do Perera&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article:publisher&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.facebook.com/felipepereira.quadrosmaia&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article:author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.facebook.com/felipepereira.quadrosmaia&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article:section&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTML&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agora que você já ta o bixão em meta tags, vai dar uma lida sobre a relação das meta tags e o SEO . A pessoa que não dá uma lida em SEO bom sujeito não é.&lt;/p&gt;

&lt;p&gt;É o primeiro artigo e gostei demais do assunto, sempre ficava perdido com algumas metas. Nesse momento não tem plugin de comentários, mas entrem em contato comigo pelo &lt;a href=&quot;https://www.facebook.com/felipepereira.quadrosmaia&quot;&gt;meu face&lt;/a&gt; e vamos trocar ideia!!&lt;/p&gt;

&lt;p&gt;Acho que o próximo será sobre o Jekyll que é o bixão demais. Abraços!&lt;/p&gt;
</description>
        <pubDate>Sun, 15 May 2016 20:15:00 -0300</pubDate>
        <link>http://felipequadros.com/meta-tags/html/front-end/2016/05/15/meta-tags-do-blog/</link>
        <guid isPermaLink="true">http://felipequadros.com/meta-tags/html/front-end/2016/05/15/meta-tags-do-blog/</guid>
        
        
        <category>meta-tags</category>
        
        <category>html</category>
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Bem Vindos</title>
        <description>&lt;p&gt;Vamos descobrir o que esse blog será.&lt;/p&gt;

&lt;p&gt;Tenho assumido vários papéis nos últimos tempos (professor, aluno, empresário, desenvolvedor, vendedor, faxineiro, investidor, diretor financeiro, cartoleiro, etc), e convivido com uma galera muito f*d@.&lt;/p&gt;

&lt;p&gt;Trabalho junto a um excelente rapaz que desde o primeiro dia na empresa ele foi bem sincero ao admitir que não sabia nada sobre qualquer área de desenvolvimento de software, mas que gostaria muito de aprender.&lt;/p&gt;

&lt;p&gt;Nas primeiras duas semanas ele fez a área administrativa de um site em Laravel com a ajuda da equipe da empresa, e essa experiência de passar conhecimento e aprender junto tem me feito experimentar a possibilidade real de crescimento através da troca sincera de conhecimento.&lt;/p&gt;

&lt;p&gt;Espero fazer isso com o blog. Preciso me acostumar a escrever, então tomarei uma cerveja diferente a cada post escrito.&lt;/p&gt;

&lt;p&gt;Hoje vou de Skol Latão por que eu to de ressaca e consequente preguiça de comprar uma melhor.&lt;/p&gt;

&lt;p&gt;Vlw flw.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 May 2016 19:45:00 -0300</pubDate>
        <link>http://felipequadros.com/primeiro-post/artigo-livre/blog/2016/05/15/bem-vindos/</link>
        <guid isPermaLink="true">http://felipequadros.com/primeiro-post/artigo-livre/blog/2016/05/15/bem-vindos/</guid>
        
        
        <category>primeiro-post</category>
        
        <category>artigo-livre</category>
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
